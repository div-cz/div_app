# Generated by Django 5.1 on 2024-11-30 21:18

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('div_content', '0081_alter_game_gameid'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Metadeveloper',
            fields=[
                ('developerid', models.AutoField(db_column='DeveloperID', primary_key=True, serialize=False)),
                ('developer', models.CharField(db_column='Developer', max_length=255)),
                ('developerurl', models.CharField(db_column='DeveloperURL', max_length=255, unique=True)),
                ('rawgid', models.IntegerField(blank=True, db_column='RawgID', null=True)),
            ],
            options={
                'db_table': 'MetaDeveloper',
            },
        ),
        migrations.CreateModel(
            name='Metapublisher',
            fields=[
                ('publisherid', models.AutoField(db_column='PublisherID', primary_key=True, serialize=False)),
                ('publisher', models.CharField(db_column='Publisher', max_length=255)),
                ('publisherurl', models.CharField(db_column='PublisherURL', max_length=255, unique=True)),
                ('rawgid', models.IntegerField(blank=True, db_column='RawgID', null=True)),
            ],
            options={
                'db_table': 'MetaPublisher',
            },
        ),
        migrations.CreateModel(
            name='Gamecomments',
            fields=[
                ('gamecommentid', models.AutoField(db_column='GameCommentID', primary_key=True, serialize=False)),
                ('gamecomment', models.TextField(db_column='GameComment')),
                ('gameid', models.ForeignKey(db_column='GameID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.game')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'GameComments',
            },
        ),
        migrations.CreateModel(
            name='Gamelocation',
            fields=[
                ('gamelocationid', models.AutoField(db_column='GameLocationID', primary_key=True, serialize=False)),
                ('locationrole', models.CharField(db_column='LocationRole', max_length=255)),
                ('gameid', models.ForeignKey(db_column='GameID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.game')),
                ('locationid', models.ForeignKey(blank=True, db_column='LocationID', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.metalocation')),
            ],
            options={
                'db_table': 'GameLocation',
            },
        ),
        migrations.CreateModel(
            name='Gamepurchase',
            fields=[
                ('purchaseid', models.AutoField(db_column='GamePurchaseID', primary_key=True, serialize=False)),
                ('purchasedate', models.DateField(db_column='PurchaseDate')),
                ('price', models.DecimalField(db_column='Price', decimal_places=2, max_digits=10)),
                ('gameid', models.ForeignKey(db_column='GameID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.game')),
            ],
            options={
                'db_table': 'GamePurchase',
            },
        ),
        migrations.CreateModel(
            name='Gamerating',
            fields=[
                ('ratingid', models.AutoField(db_column='RatingID', primary_key=True, serialize=False)),
                ('rating', models.IntegerField(db_column='Rating')),
                ('comment', models.TextField(db_column='Comment')),
                ('gameid', models.ForeignKey(db_column='GameID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.game')),
            ],
            options={
                'db_table': 'GameRating',
            },
        ),
    ]
