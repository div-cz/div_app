# Generated by Django 4.2.4 on 2023-09-07 20:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('url', models.CharField(db_column='URL', max_length=255)),
                ('title', models.CharField(db_column='Title', max_length=255)),
                ('h1', models.CharField(db_column='H1', max_length=255)),
                ('h2', models.CharField(db_column='H2', max_length=255)),
                ('tagline', models.CharField(db_column='Tagline', max_length=64)),
                ('content', models.TextField(db_column='Content')),
                ('img1600', models.CharField(db_column='Img1600', max_length=255)),
                ('img500x500', models.CharField(db_column='Img500x500', max_length=255)),
                ('img400x250', models.CharField(db_column='Img400x250', max_length=255)),
                ('alt', models.CharField(db_column='Alt', max_length=255)),
                ('perex', models.CharField(db_column='Perex', max_length=255)),
                ('article', models.TextField(db_column='Article')),
                ('autor', models.CharField(db_column='Autor', max_length=255)),
                ('typ', models.CharField(db_column='Typ', max_length=50)),
                ('counter', models.IntegerField(db_column='Counter')),
                ('created', models.DateField(db_column='Created')),
                ('updated', models.DateField(db_column='Updated')),
            ],
            options={
                'db_table': 'Article',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('bookid', models.IntegerField(db_column='BookID', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Title', max_length=255)),
                ('author', models.CharField(db_column='Author', max_length=255)),
                ('description', models.TextField(db_column='Description')),
            ],
            options={
                'db_table': 'Book',
            },
        ),
        migrations.CreateModel(
            name='Bookcover',
            fields=[
                ('coverid', models.IntegerField(db_column='CoverID', primary_key=True, serialize=False)),
                ('bookid', models.IntegerField(db_column='BookID')),
                ('cover', models.CharField(db_column='Cover', max_length=255)),
            ],
            options={
                'db_table': 'BookCover',
            },
        ),
        migrations.CreateModel(
            name='Bookpublisher',
            fields=[
                ('publisherid', models.IntegerField(db_column='PublisherID', primary_key=True, serialize=False)),
                ('publishername', models.CharField(db_column='PublisherName', max_length=255)),
            ],
            options={
                'db_table': 'BookPublisher',
            },
        ),
        migrations.CreateModel(
            name='Charactermeta',
            fields=[
                ('characterid', models.IntegerField(db_column='CharacterID', primary_key=True, serialize=False)),
                ('charactername', models.CharField(db_column='CharacterName', max_length=255)),
                ('characterdescription', models.TextField(db_column='CharacterDescription')),
            ],
            options={
                'db_table': 'CharacterMeta',
            },
        ),
        migrations.CreateModel(
            name='Creator',
            fields=[
                ('creatorid', models.IntegerField(db_column='CreatorID', primary_key=True, serialize=False)),
                ('firstname', models.CharField(db_column='FirstName', max_length=255)),
                ('lastname', models.CharField(db_column='LastName', max_length=255)),
                ('birthdate', models.DateField(db_column='BirthDate')),
                ('nationality', models.CharField(db_column='Nationality', max_length=255)),
            ],
            options={
                'db_table': 'Creator',
            },
        ),
        migrations.CreateModel(
            name='Creatorrole',
            fields=[
                ('roleid', models.IntegerField(db_column='RoleID', primary_key=True, serialize=False)),
                ('rolename', models.CharField(db_column='RoleName', max_length=255)),
            ],
            options={
                'db_table': 'CreatorRole',
            },
        ),
        migrations.CreateModel(
            name='Drink',
            fields=[
                ('drinkid', models.IntegerField(db_column='DrinkID', primary_key=True, serialize=False)),
                ('drinkname', models.CharField(db_column='DrinkName', max_length=255)),
                ('description', models.TextField(db_column='Description')),
            ],
            options={
                'db_table': 'Drink',
            },
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('foodid', models.IntegerField(db_column='FoodID', primary_key=True, serialize=False)),
                ('foodname', models.CharField(db_column='FoodName', max_length=255)),
                ('description', models.TextField(db_column='Description')),
            ],
            options={
                'db_table': 'Food',
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('gameid', models.IntegerField(db_column='GameID', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Title', max_length=255)),
                ('ratingid', models.IntegerField(db_column='RatingID')),
                ('description', models.TextField(db_column='Description')),
            ],
            options={
                'db_table': 'Game',
            },
        ),
        migrations.CreateModel(
            name='Gamedevelopers',
            fields=[
                ('developerid', models.IntegerField(db_column='DeveloperID', primary_key=True, serialize=False)),
                ('developername', models.CharField(db_column='DeveloperName', max_length=255)),
            ],
            options={
                'db_table': 'GameDevelopers',
            },
        ),
        migrations.CreateModel(
            name='Gameplatform',
            fields=[
                ('platformid', models.IntegerField(db_column='PlatformID', primary_key=True, serialize=False)),
                ('platform', models.CharField(db_column='Platform', max_length=255)),
            ],
            options={
                'db_table': 'GamePlatform',
            },
        ),
        migrations.CreateModel(
            name='Gamepublisher',
            fields=[
                ('publisherid', models.IntegerField(db_column='PublisherID', primary_key=True, serialize=False)),
                ('publishername', models.CharField(db_column='PublisherName', max_length=255)),
            ],
            options={
                'db_table': 'GamePublisher',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('itemid', models.IntegerField(db_column='ItemID', primary_key=True, serialize=False)),
                ('itemname', models.CharField(db_column='ItemName', max_length=255)),
                ('itemdescription', models.TextField(db_column='ItemDescription')),
            ],
            options={
                'db_table': 'Item',
            },
        ),
        migrations.CreateModel(
            name='Itemtypes',
            fields=[
                ('itemtypeid', models.IntegerField(db_column='ItemTypeID', primary_key=True, serialize=False)),
                ('type', models.CharField(db_column='Type', max_length=255)),
            ],
            options={
                'db_table': 'ItemTypes',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('locationid', models.IntegerField(db_column='LocationID', primary_key=True, serialize=False)),
                ('locationname', models.CharField(db_column='LocationName', max_length=255)),
                ('locationtype', models.CharField(db_column='LocationType', max_length=50)),
                ('locationdescription', models.TextField(db_column='LocationDescription')),
                ('parentlocationid', models.IntegerField(db_column='ParentLocationID')),
                ('locationadress', models.CharField(db_column='LocationAdress', max_length=255)),
            ],
            options={
                'db_table': 'Location',
            },
        ),
        migrations.CreateModel(
            name='Metacountry',
            fields=[
                ('countryid', models.IntegerField(db_column='CountryID', primary_key=True, serialize=False)),
                ('countryname', models.CharField(db_column='CountryName', max_length=255)),
                ('countrycode', models.CharField(db_column='CountryCode', max_length=3)),
                ('countrynamecz', models.CharField(db_column='CountryNameCZ', max_length=255)),
            ],
            options={
                'db_table': 'MetaCountry',
            },
        ),
        migrations.CreateModel(
            name='Metagenre',
            fields=[
                ('genreid', models.IntegerField(db_column='GenreID', primary_key=True, serialize=False)),
                ('genrename', models.CharField(db_column='GenreName', max_length=255)),
                ('genrenamecz', models.CharField(db_column='GenreNameCZ', max_length=255)),
                ('tmdbid', models.IntegerField(db_column='TmdbID')),
            ],
            options={
                'db_table': 'MetaGenre',
            },
        ),
        migrations.CreateModel(
            name='Metaworld',
            fields=[
                ('worldid', models.IntegerField(db_column='WorldID', primary_key=True, serialize=False)),
                ('worldname', models.CharField(db_column='WorldName', max_length=255)),
                ('worlddescrtiption', models.TextField(db_column='WorldDescrtiption')),
            ],
            options={
                'db_table': 'MetaWorld',
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('movieid', models.IntegerField(db_column='MovieID', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Title', max_length=255)),
                ('description', models.TextField(db_column='Description')),
                ('releaseyear', models.TextField(db_column='ReleaseYear')),
                ('duration', models.IntegerField(db_column='Duration')),
                ('language', models.CharField(db_column='Language', max_length=5)),
                ('budget', models.DecimalField(db_column='Budget', decimal_places=2, max_digits=15)),
                ('id_csfd', models.IntegerField(db_column='ID_Csfd')),
                ('id_imdb', models.IntegerField(db_column='ID_Imdb')),
                ('id_tmdb', models.IntegerField(db_column='ID_Tmdb')),
                ('titlecz', models.CharField(db_column='TitleCZ', max_length=255)),
                ('url', models.CharField(db_column='URL', max_length=255)),
                ('oldurl', models.CharField(db_column='OldURL', max_length=255)),
                ('worldid', models.ForeignKey(db_column='WorldID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.metaworld')),
            ],
            options={
                'db_table': 'Movie',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('userid', models.IntegerField(db_column='UserID', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='Username', max_length=255)),
                ('email', models.CharField(db_column='Email', max_length=255, unique=True)),
                ('password', models.CharField(db_column='Password', max_length=255)),
                ('firstname', models.CharField(db_column='FirstName', max_length=255)),
                ('lastname', models.CharField(db_column='LastName', max_length=255)),
                ('dateofbirth', models.DateField(db_column='DateOfBirth')),
                ('gender', models.CharField(db_column='Gender', max_length=6)),
                ('city', models.CharField(db_column='City', max_length=255)),
                ('signupdate', models.DateField(db_column='SignUpDate')),
                ('lastlogin', models.DateField(db_column='LastLogin')),
                ('isactive', models.IntegerField(db_column='IsActive')),
                ('isadmin', models.IntegerField(db_column='IsAdmin')),
                ('profilepicture', models.CharField(db_column='ProfilePicture', max_length=255)),
                ('bio', models.TextField(db_column='Bio')),
                ('countryid', models.ForeignKey(db_column='CountryID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.metacountry')),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='Tvshow',
            fields=[
                ('tvshowid', models.IntegerField(db_column='TVShowID', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Title', max_length=255)),
                ('description', models.TextField(db_column='Description')),
                ('premieredate', models.DateField(db_column='PremiereDate')),
                ('enddate', models.DateField(db_column='EndDate')),
                ('rating', models.IntegerField(db_column='Rating')),
                ('countryid', models.ForeignKey(db_column='CountryID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.metacountry')),
                ('genreid', models.ForeignKey(db_column='GenreID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.metagenre')),
            ],
            options={
                'db_table': 'TVShow',
            },
        ),
        migrations.CreateModel(
            name='Tvseason',
            fields=[
                ('sessionid', models.IntegerField(db_column='SessionID', primary_key=True, serialize=False)),
                ('seasonnumber', models.IntegerField(db_column='SeasonNumber')),
                ('premieredate', models.DateField(db_column='PremiereDate')),
                ('enddate', models.DateField(db_column='EndDate')),
                ('tvshowid', models.ForeignKey(db_column='TVShowID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.tvshow')),
            ],
            options={
                'db_table': 'TVSeason',
            },
        ),
        migrations.CreateModel(
            name='Tvepisode',
            fields=[
                ('episodeid', models.IntegerField(db_column='EpisodeID', primary_key=True, serialize=False)),
                ('episodenumber', models.IntegerField(db_column='EpisodeNumber')),
                ('title', models.CharField(db_column='Title', max_length=255)),
                ('airdate', models.DateField(db_column='AirDate')),
                ('description', models.TextField(db_column='Description')),
                ('sessionid', models.ForeignKey(db_column='SessionID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.tvseason')),
            ],
            options={
                'db_table': 'TVEpisode',
            },
        ),
        migrations.CreateModel(
            name='Movieversions',
            fields=[
                ('movieversionid', models.IntegerField(db_column='MovieVersionID', primary_key=True, serialize=False)),
                ('versionname', models.CharField(db_column='VersionName', max_length=255)),
                ('duration', models.IntegerField(db_column='Duration')),
                ('releasedate', models.DateField(db_column='ReleaseDate')),
                ('movieid', models.ForeignKey(db_column='MovieID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.movie')),
            ],
            options={
                'db_table': 'MovieVersions',
            },
        ),
        migrations.CreateModel(
            name='Movierating',
            fields=[
                ('ratingid', models.IntegerField(db_column='RatingID', primary_key=True, serialize=False)),
                ('rating', models.IntegerField(db_column='Rating')),
                ('comment', models.TextField(db_column='Comment')),
                ('movieid', models.ForeignKey(db_column='MovieID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.movie')),
                ('userid', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.user')),
            ],
            options={
                'db_table': 'MovieRating',
            },
        ),
        migrations.CreateModel(
            name='Moviegenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genreid', models.ForeignKey(db_column='GenreID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.metagenre')),
                ('movieid', models.ForeignKey(db_column='MovieID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.movie')),
            ],
            options={
                'db_table': 'MovieGenre',
            },
        ),
        migrations.CreateModel(
            name='Moviecrew',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('moviecrewid', models.IntegerField(db_column='MovieCrewID')),
                ('characterid', models.ForeignKey(db_column='CharacterID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.charactermeta')),
                ('movieid', models.ForeignKey(db_column='MovieID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.movie')),
                ('peopleid', models.ForeignKey(db_column='PeopleID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.creator')),
                ('roleid', models.ForeignKey(db_column='RoleID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.creatorrole')),
            ],
            options={
                'db_table': 'MovieCrew',
            },
        ),
        migrations.CreateModel(
            name='Moviecountries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('countryid', models.ForeignKey(db_column='CountryID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.metacountry')),
                ('movieid', models.ForeignKey(db_column='MovieID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.movie')),
            ],
            options={
                'db_table': 'MovieCountries',
            },
        ),
        migrations.CreateModel(
            name='Moviecomments',
            fields=[
                ('commentid', models.IntegerField(db_column='CommentID', primary_key=True, serialize=False)),
                ('comment', models.TextField(db_column='Comment')),
                ('movieid', models.ForeignKey(db_column='MovieID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.movie')),
                ('userid', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.user')),
            ],
            options={
                'db_table': 'MovieComments',
            },
        ),
        migrations.CreateModel(
            name='Metacity',
            fields=[
                ('cityid', models.IntegerField(db_column='CityID', primary_key=True, serialize=False)),
                ('namecity', models.CharField(db_column='NameCity', max_length=255)),
                ('countryid', models.ForeignKey(db_column='CountryID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.metacountry')),
            ],
            options={
                'db_table': 'MetaCity',
            },
        ),
        migrations.CreateModel(
            name='Locationmovie',
            fields=[
                ('movielocationid', models.IntegerField(db_column='MovieLocationID', primary_key=True, serialize=False)),
                ('locationrole', models.CharField(db_column='LocationRole', max_length=255)),
                ('locationid', models.ForeignKey(db_column='LocationID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.location')),
                ('movieid', models.ForeignKey(db_column='MovieID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.movie')),
            ],
            options={
                'db_table': 'LocationMovie',
            },
        ),
        migrations.CreateModel(
            name='Locationgame',
            fields=[
                ('gamelocationid', models.IntegerField(db_column='GameLocationID', primary_key=True, serialize=False)),
                ('locationrole', models.CharField(db_column='LocationRole', max_length=255)),
                ('gameid', models.ForeignKey(db_column='GameID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.game')),
                ('locationid', models.ForeignKey(db_column='LocationID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.location')),
            ],
            options={
                'db_table': 'LocationGame',
            },
        ),
        migrations.CreateModel(
            name='Locationbook',
            fields=[
                ('booklocationid', models.IntegerField(db_column='BookLocationID', primary_key=True, serialize=False)),
                ('locationrole', models.CharField(db_column='LocationRole', max_length=255)),
                ('bookid', models.ForeignKey(db_column='BookID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.book')),
                ('locationid', models.ForeignKey(db_column='LocationID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.location')),
            ],
            options={
                'db_table': 'LocationBook',
            },
        ),
        migrations.CreateModel(
            name='Itemmovie',
            fields=[
                ('movieitemid', models.IntegerField(db_column='MovieItemID', primary_key=True, serialize=False)),
                ('itemrole', models.IntegerField(db_column='ItemRole')),
                ('itemid', models.ForeignKey(db_column='ItemID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.item')),
                ('movieid', models.ForeignKey(db_column='MovieID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.movie')),
            ],
            options={
                'db_table': 'ItemMovie',
            },
        ),
        migrations.CreateModel(
            name='Itemgame',
            fields=[
                ('gameitemid', models.IntegerField(db_column='GameItemID', primary_key=True, serialize=False)),
                ('itemrole', models.CharField(db_column='ItemRole', max_length=255)),
                ('gameid', models.ForeignKey(db_column='GameID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.game')),
                ('itemid', models.ForeignKey(db_column='ItemID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.item')),
            ],
            options={
                'db_table': 'ItemGame',
            },
        ),
        migrations.CreateModel(
            name='Itembook',
            fields=[
                ('bookitemid', models.IntegerField(db_column='BookItemID', primary_key=True, serialize=False)),
                ('itemrole', models.CharField(db_column='ItemRole', max_length=255)),
                ('bookid', models.ForeignKey(db_column='BookID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.book')),
                ('itemid', models.ForeignKey(db_column='ItemID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.item')),
            ],
            options={
                'db_table': 'ItemBook',
            },
        ),
        migrations.AddField(
            model_name='item',
            name='itemtypeid',
            field=models.ForeignKey(db_column='ItemTypeID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.itemtypes'),
        ),
        migrations.CreateModel(
            name='Gamerating',
            fields=[
                ('ratingid', models.IntegerField(db_column='RatingID', primary_key=True, serialize=False)),
                ('rating', models.IntegerField(db_column='Rating')),
                ('comment', models.TextField(db_column='Comment')),
                ('gameid', models.ForeignKey(db_column='GameID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.game')),
                ('userid', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.user')),
            ],
            options={
                'db_table': 'GameRating',
            },
        ),
        migrations.CreateModel(
            name='Gamepurchase',
            fields=[
                ('purchaseid', models.IntegerField(db_column='PurchaseID', primary_key=True, serialize=False)),
                ('purchasedate', models.DateField(db_column='PurchaseDate')),
                ('price', models.DecimalField(db_column='Price', decimal_places=2, max_digits=10)),
                ('gameid', models.ForeignKey(db_column='GameID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.game')),
                ('userid', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.user')),
            ],
            options={
                'db_table': 'GamePurchase',
            },
        ),
        migrations.CreateModel(
            name='Gamecomments',
            fields=[
                ('commentid', models.IntegerField(db_column='CommentID', primary_key=True, serialize=False)),
                ('comment', models.TextField(db_column='Comment')),
                ('gameid', models.ForeignKey(db_column='GameID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.game')),
                ('userid', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.user')),
            ],
            options={
                'db_table': 'GameComments',
            },
        ),
        migrations.AddField(
            model_name='game',
            name='countryid',
            field=models.ForeignKey(db_column='CountryID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.metacountry'),
        ),
        migrations.AddField(
            model_name='game',
            name='developerid',
            field=models.ForeignKey(db_column='DeveloperID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.gamedevelopers'),
        ),
        migrations.AddField(
            model_name='game',
            name='genreid',
            field=models.ForeignKey(db_column='GenreID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.metagenre'),
        ),
        migrations.AddField(
            model_name='game',
            name='platformid',
            field=models.ForeignKey(db_column='PlatformID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.gameplatform'),
        ),
        migrations.AddField(
            model_name='game',
            name='publisherid',
            field=models.ForeignKey(db_column='PublisherID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.gamepublisher'),
        ),
        migrations.AddField(
            model_name='game',
            name='worldid',
            field=models.ForeignKey(db_column='WorldID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.metaworld'),
        ),
        migrations.CreateModel(
            name='Foodmedia',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('mediatype', models.IntegerField(db_column='MediaType')),
                ('foodid', models.ForeignKey(db_column='FoodID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.food')),
            ],
            options={
                'db_table': 'FoodMedia',
            },
        ),
        migrations.CreateModel(
            name='Drinkmedia',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('mediatype', models.IntegerField(db_column='MediaType')),
                ('drinkid', models.ForeignKey(db_column='DrinkID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.drink')),
            ],
            options={
                'db_table': 'DrinkMedia',
            },
        ),
        migrations.CreateModel(
            name='Creatorintvshow',
            fields=[
                ('creatorintvshowid', models.IntegerField(db_column='CreatorInTVShowID', primary_key=True, serialize=False)),
                ('creatorid', models.ForeignKey(db_column='CreatorID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.creator')),
                ('roleid', models.ForeignKey(db_column='RoleID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.creatorrole')),
                ('tvshowid', models.ForeignKey(db_column='TVShowID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.tvshow')),
            ],
            options={
                'db_table': 'CreatorInTVShow',
            },
        ),
        migrations.CreateModel(
            name='Creatorinmovie',
            fields=[
                ('creatorinmovieid', models.IntegerField(db_column='CreatorInMovieID', primary_key=True, serialize=False)),
                ('creatorid', models.ForeignKey(db_column='CreatorID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.creator')),
                ('movieid', models.ForeignKey(db_column='MovieID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.movie')),
                ('roleid', models.ForeignKey(db_column='RoleID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.creatorrole')),
            ],
            options={
                'db_table': 'CreatorInMovie',
            },
        ),
        migrations.CreateModel(
            name='Creatoringame',
            fields=[
                ('creatoringameid', models.IntegerField(db_column='CreatorInGameID', primary_key=True, serialize=False)),
                ('creatorid', models.ForeignKey(db_column='CreatorID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.creator')),
                ('gameid', models.ForeignKey(db_column='GameID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.game')),
                ('roleid', models.ForeignKey(db_column='RoleID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.creatorrole')),
            ],
            options={
                'db_table': 'CreatorInGame',
            },
        ),
        migrations.AddField(
            model_name='creator',
            name='countryid',
            field=models.ForeignKey(db_column='CountryID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.metacountry'),
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('commentid', models.IntegerField(db_column='CommentID', primary_key=True, serialize=False)),
                ('comment', models.TextField(db_column='Comment')),
                ('commentdate', models.DateField(db_column='CommentDate')),
                ('userid', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.user')),
            ],
            options={
                'db_table': 'Comments',
            },
        ),
        migrations.CreateModel(
            name='Charactertvshow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tvshowcharacterid', models.IntegerField(db_column='TVShowCharacterID')),
                ('characterrole', models.CharField(db_column='CharacterRole', max_length=255)),
                ('characterid', models.ForeignKey(db_column='CharacterID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.charactermeta')),
                ('tvshowid', models.ForeignKey(db_column='TVShowID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.tvshow')),
            ],
            options={
                'db_table': 'CharacterTVShow',
            },
        ),
        migrations.CreateModel(
            name='Charactermovie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('moviecharacterid', models.IntegerField(db_column='MovieCharacterID')),
                ('characterrole', models.CharField(db_column='CharacterRole', max_length=255)),
                ('characterid', models.ForeignKey(db_column='CharacterID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.charactermeta')),
                ('movieid', models.ForeignKey(db_column='MovieID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.movie')),
            ],
            options={
                'db_table': 'CharacterMovie',
            },
        ),
        migrations.CreateModel(
            name='Charactergame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gamecharacterid', models.IntegerField(db_column='GameCharacterID')),
                ('characterrole', models.CharField(db_column='CharacterRole', max_length=255)),
                ('characterid', models.ForeignKey(db_column='CharacterID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.charactermeta')),
                ('gameid', models.ForeignKey(db_column='GameID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.game')),
            ],
            options={
                'db_table': 'CharacterGame',
            },
        ),
        migrations.CreateModel(
            name='Characterbook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bookcharacterid', models.IntegerField(db_column='BookCharacterID')),
                ('characterrole', models.CharField(db_column='CharacterRole', max_length=255)),
                ('bookid', models.ForeignKey(db_column='BookID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.book')),
                ('characterid', models.ForeignKey(db_column='CharacterID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.charactermeta')),
            ],
            options={
                'db_table': 'CharacterBook',
            },
        ),
        migrations.CreateModel(
            name='Bookrating',
            fields=[
                ('ratingid', models.IntegerField(db_column='RatingID', primary_key=True, serialize=False)),
                ('rating', models.IntegerField(db_column='Rating')),
                ('comment', models.TextField(db_column='Comment')),
                ('bookid', models.ForeignKey(db_column='BookID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.book')),
                ('userid', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.user')),
            ],
            options={
                'db_table': 'BookRating',
            },
        ),
        migrations.CreateModel(
            name='Bookpurchase',
            fields=[
                ('purchaseid', models.IntegerField(db_column='PurchaseID', primary_key=True, serialize=False)),
                ('purchasedate', models.DateField(db_column='PurchaseDate')),
                ('price', models.DecimalField(db_column='Price', decimal_places=2, max_digits=10)),
                ('bookid', models.ForeignKey(db_column='BookID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.book')),
                ('userid', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.user')),
            ],
            options={
                'db_table': 'BookPurchase',
            },
        ),
        migrations.CreateModel(
            name='Bookcomments',
            fields=[
                ('commentid', models.IntegerField(db_column='CommentID', primary_key=True, serialize=False)),
                ('comment', models.TextField(db_column='Comment')),
                ('bookid', models.ForeignKey(db_column='BookID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.book')),
                ('userid', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.user')),
            ],
            options={
                'db_table': 'BookComments',
            },
        ),
        migrations.AddField(
            model_name='book',
            name='countryid',
            field=models.ForeignKey(db_column='CountryID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.metacountry'),
        ),
        migrations.AddField(
            model_name='book',
            name='genreid',
            field=models.ForeignKey(db_column='GenreID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.metagenre'),
        ),
        migrations.AddField(
            model_name='book',
            name='publisherid',
            field=models.ForeignKey(db_column='PublisherID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.bookpublisher'),
        ),
        migrations.AddField(
            model_name='book',
            name='worldid',
            field=models.ForeignKey(db_column='WorldID', on_delete=django.db.models.deletion.DO_NOTHING, to='div_content.metaworld'),
        ),
    ]
