# Generated by Django 4.2.4 on 2023-09-04 16:02

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('div_content', '0006_alter_movie_world'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bookcomments',
            fields=[
                ('commentid', models.IntegerField(db_column='CommentID', primary_key=True, serialize=False)),
                ('comment', models.TextField(db_column='Comment')),
            ],
            options={
                'db_table': 'BookComments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bookcover',
            fields=[
                ('coverid', models.IntegerField(db_column='CoverID', primary_key=True, serialize=False)),
                ('bookid', models.IntegerField(db_column='BookID')),
                ('cover', models.CharField(db_column='Cover', max_length=255)),
            ],
            options={
                'db_table': 'BookCover',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bookpurchase',
            fields=[
                ('purchaseid', models.IntegerField(db_column='PurchaseID', primary_key=True, serialize=False)),
                ('purchasedate', models.DateField(db_column='PurchaseDate')),
                ('price', models.DecimalField(db_column='Price', decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'BookPurchase',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bookrating',
            fields=[
                ('ratingid', models.IntegerField(db_column='RatingID', primary_key=True, serialize=False)),
                ('rating', models.IntegerField(db_column='Rating')),
                ('comment', models.TextField(db_column='Comment')),
            ],
            options={
                'db_table': 'BookRating',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Characterbook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bookcharacterid', models.IntegerField(db_column='BookCharacterID')),
                ('characterrole', models.CharField(db_column='CharacterRole', max_length=255)),
            ],
            options={
                'db_table': 'CharacterBook',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Charactergame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gamecharacterid', models.IntegerField(db_column='GameCharacterID')),
                ('characterrole', models.CharField(db_column='CharacterRole', max_length=255)),
            ],
            options={
                'db_table': 'CharacterGame',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Charactermeta',
            fields=[
                ('characterid', models.IntegerField(db_column='CharacterID', primary_key=True, serialize=False)),
                ('charactername', models.CharField(db_column='CharacterName', max_length=255)),
                ('characterdescription', models.TextField(db_column='CharacterDescription')),
            ],
            options={
                'db_table': 'CharacterMeta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Charactermovie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('moviecharacterid', models.IntegerField(db_column='MovieCharacterID')),
                ('characterrole', models.CharField(db_column='CharacterRole', max_length=255)),
            ],
            options={
                'db_table': 'CharacterMovie',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Charactertvshow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tvshowcharacterid', models.IntegerField(db_column='TVShowCharacterID')),
                ('characterrole', models.CharField(db_column='CharacterRole', max_length=255)),
            ],
            options={
                'db_table': 'CharacterTVShow',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('commentid', models.IntegerField(db_column='CommentID', primary_key=True, serialize=False)),
                ('comment', models.TextField(db_column='Comment')),
                ('commentdate', models.DateField(db_column='CommentDate')),
            ],
            options={
                'db_table': 'Comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Creator',
            fields=[
                ('creatorid', models.IntegerField(db_column='CreatorID', primary_key=True, serialize=False)),
                ('firstname', models.CharField(db_column='FirstName', max_length=255)),
                ('lastname', models.CharField(db_column='LastName', max_length=255)),
                ('birthdate', models.DateField(db_column='BirthDate')),
                ('nationality', models.CharField(db_column='Nationality', max_length=255)),
            ],
            options={
                'db_table': 'Creator',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Creatoringame',
            fields=[
                ('creatoringameid', models.IntegerField(db_column='CreatorInGameID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'CreatorInGame',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Creatorinmovie',
            fields=[
                ('creatorinmovieid', models.IntegerField(db_column='CreatorInMovieID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'CreatorInMovie',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Creatorintvshow',
            fields=[
                ('creatorintvshowid', models.IntegerField(db_column='CreatorInTVShowID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'CreatorInTVShow',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Creatorrole',
            fields=[
                ('roleid', models.IntegerField(db_column='RoleID', primary_key=True, serialize=False)),
                ('rolename', models.CharField(db_column='RoleName', max_length=255)),
            ],
            options={
                'db_table': 'CreatorRole',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Drink',
            fields=[
                ('drinkid', models.IntegerField(db_column='DrinkID', primary_key=True, serialize=False)),
                ('drinkname', models.CharField(db_column='DrinkName', max_length=255)),
                ('description', models.TextField(db_column='Description')),
            ],
            options={
                'db_table': 'Drink',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Drinkmedia',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('mediatype', models.IntegerField(db_column='MediaType')),
            ],
            options={
                'db_table': 'DrinkMedia',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('foodid', models.IntegerField(db_column='FoodID', primary_key=True, serialize=False)),
                ('foodname', models.CharField(db_column='FoodName', max_length=255)),
                ('description', models.TextField(db_column='Description')),
            ],
            options={
                'db_table': 'Food',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Foodmedia',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('mediatype', models.IntegerField(db_column='MediaType')),
            ],
            options={
                'db_table': 'FoodMedia',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gamecomments',
            fields=[
                ('commentid', models.IntegerField(db_column='CommentID', primary_key=True, serialize=False)),
                ('comment', models.TextField(db_column='Comment')),
            ],
            options={
                'db_table': 'GameComments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gamepurchase',
            fields=[
                ('purchaseid', models.IntegerField(db_column='PurchaseID', primary_key=True, serialize=False)),
                ('purchasedate', models.DateField(db_column='PurchaseDate')),
                ('price', models.DecimalField(db_column='Price', decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'GamePurchase',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gamerating',
            fields=[
                ('ratingid', models.IntegerField(db_column='RatingID', primary_key=True, serialize=False)),
                ('rating', models.IntegerField(db_column='Rating')),
                ('comment', models.TextField(db_column='Comment')),
            ],
            options={
                'db_table': 'GameRating',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('itemid', models.IntegerField(db_column='ItemID', primary_key=True, serialize=False)),
                ('itemname', models.CharField(db_column='ItemName', max_length=255)),
                ('itemdescription', models.TextField(db_column='ItemDescription')),
            ],
            options={
                'db_table': 'Item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Itembook',
            fields=[
                ('bookitemid', models.IntegerField(db_column='BookItemID', primary_key=True, serialize=False)),
                ('itemrole', models.CharField(db_column='ItemRole', max_length=255)),
            ],
            options={
                'db_table': 'ItemBook',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Itemgame',
            fields=[
                ('gameitemid', models.IntegerField(db_column='GameItemID', primary_key=True, serialize=False)),
                ('itemrole', models.CharField(db_column='ItemRole', max_length=255)),
            ],
            options={
                'db_table': 'ItemGame',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Itemmovie',
            fields=[
                ('movieitemid', models.IntegerField(db_column='MovieItemID', primary_key=True, serialize=False)),
                ('itemrole', models.IntegerField(db_column='ItemRole')),
            ],
            options={
                'db_table': 'ItemMovie',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Itemtypes',
            fields=[
                ('itemtypeid', models.IntegerField(db_column='ItemTypeID', primary_key=True, serialize=False)),
                ('type', models.CharField(db_column='Type', max_length=255)),
            ],
            options={
                'db_table': 'ItemTypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('locationid', models.IntegerField(db_column='LocationID', primary_key=True, serialize=False)),
                ('locationname', models.CharField(db_column='LocationName', max_length=255)),
                ('locationtype', models.CharField(db_column='LocationType', max_length=50)),
                ('locationdescription', models.TextField(db_column='LocationDescription')),
                ('parentlocationid', models.IntegerField(db_column='ParentLocationID')),
                ('locationadress', models.CharField(db_column='LocationAdress', max_length=255)),
            ],
            options={
                'db_table': 'Location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Locationbook',
            fields=[
                ('booklocationid', models.IntegerField(db_column='BookLocationID', primary_key=True, serialize=False)),
                ('locationrole', models.CharField(db_column='LocationRole', max_length=255)),
            ],
            options={
                'db_table': 'LocationBook',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Locationgame',
            fields=[
                ('gamelocationid', models.IntegerField(db_column='GameLocationID', primary_key=True, serialize=False)),
                ('locationrole', models.CharField(db_column='LocationRole', max_length=255)),
            ],
            options={
                'db_table': 'LocationGame',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Locationmovie',
            fields=[
                ('movielocationid', models.IntegerField(db_column='MovieLocationID', primary_key=True, serialize=False)),
                ('locationrole', models.CharField(db_column='LocationRole', max_length=255)),
            ],
            options={
                'db_table': 'LocationMovie',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Metacity',
            fields=[
                ('cityid', models.IntegerField(db_column='CityID', primary_key=True, serialize=False)),
                ('namecity', models.CharField(db_column='NameCity', max_length=255)),
            ],
            options={
                'db_table': 'MetaCity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Moviecomments',
            fields=[
                ('commentid', models.IntegerField(db_column='CommentID', primary_key=True, serialize=False)),
                ('comment', models.TextField(db_column='Comment')),
            ],
            options={
                'db_table': 'MovieComments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Moviecountries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'MovieCountries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Moviecrew',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('moviecrewid', models.IntegerField(db_column='MovieCrewID')),
            ],
            options={
                'db_table': 'MovieCrew',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Moviegenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'MovieGenre',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Movierating',
            fields=[
                ('ratingid', models.IntegerField(db_column='RatingID', primary_key=True, serialize=False)),
                ('rating', models.IntegerField(db_column='Rating')),
                ('comment', models.TextField(db_column='Comment')),
            ],
            options={
                'db_table': 'MovieRating',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Movieversions',
            fields=[
                ('movieversionid', models.IntegerField(db_column='MovieVersionID', primary_key=True, serialize=False)),
                ('versionname', models.CharField(db_column='VersionName', max_length=255)),
                ('duration', models.IntegerField(db_column='Duration')),
                ('releasedate', models.DateField(db_column='ReleaseDate')),
            ],
            options={
                'db_table': 'MovieVersions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tvepisode',
            fields=[
                ('episodeid', models.IntegerField(db_column='EpisodeID', primary_key=True, serialize=False)),
                ('episodenumber', models.IntegerField(db_column='EpisodeNumber')),
                ('title', models.CharField(db_column='Title', max_length=255)),
                ('airdate', models.DateField(db_column='AirDate')),
                ('description', models.TextField(db_column='Description')),
            ],
            options={
                'db_table': 'TVEpisode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tvseason',
            fields=[
                ('sessionid', models.IntegerField(db_column='SessionID', primary_key=True, serialize=False)),
                ('seasonnumber', models.IntegerField(db_column='SeasonNumber')),
                ('premieredate', models.DateField(db_column='PremiereDate')),
                ('enddate', models.DateField(db_column='EndDate')),
            ],
            options={
                'db_table': 'TVSeason',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tvshow',
            fields=[
                ('tvshowid', models.IntegerField(db_column='TVShowID', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Title', max_length=255)),
                ('description', models.TextField(db_column='Description')),
                ('premieredate', models.DateField(db_column='PremiereDate')),
                ('enddate', models.DateField(db_column='EndDate')),
                ('rating', models.IntegerField(db_column='Rating')),
            ],
            options={
                'db_table': 'TVShow',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('userid', models.IntegerField(db_column='UserID', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='Username', max_length=255)),
                ('email', models.CharField(db_column='Email', max_length=255, unique=True)),
                ('password', models.CharField(db_column='Password', max_length=255)),
                ('firstname', models.CharField(db_column='FirstName', max_length=255)),
                ('lastname', models.CharField(db_column='LastName', max_length=255)),
                ('dateofbirth', models.DateField(db_column='DateOfBirth')),
                ('gender', models.CharField(db_column='Gender', max_length=6)),
                ('city', models.CharField(db_column='City', max_length=255)),
                ('signupdate', models.DateField(db_column='SignUpDate')),
                ('lastlogin', models.DateField(db_column='LastLogin')),
                ('isactive', models.IntegerField(db_column='IsActive')),
                ('isadmin', models.IntegerField(db_column='IsAdmin')),
                ('profilepicture', models.CharField(db_column='ProfilePicture', max_length=255)),
                ('bio', models.TextField(db_column='Bio')),
            ],
            options={
                'db_table': 'User',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='Lokalita',
        ),
        migrations.AlterModelOptions(
            name='article',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='book',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='bookpublisher',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='game',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='gamedevelopers',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='gameplatform',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='gamepublisher',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='metacountry',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='metagenre',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='metaworld',
            options={'managed': False},
        ),
        migrations.AlterModelOptions(
            name='movie',
            options={'managed': False},
        ),
    ]
