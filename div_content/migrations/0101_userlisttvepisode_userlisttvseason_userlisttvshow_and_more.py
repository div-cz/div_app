# Generated by Django 5.1 on 2024-12-01 08:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('div_content', '0100_charactertvshow_tvcrew_tvepisodecrew_tvgenre'),
    ]

    operations = [
        migrations.CreateModel(
            name='Userlisttvepisode',
            fields=[
                ('userlisttvepisodeid', models.AutoField(db_column='UserListTVEpisodeID', primary_key=True, serialize=False)),
                ('addedat', models.DateTimeField(auto_now_add=True, db_column='AddedAt')),
                ('tvepisode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='div_content.tvepisode')),
                ('userlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='div_content.userlist')),
            ],
            options={
                'db_table': 'UserListTVEpisode',
            },
        ),
        migrations.CreateModel(
            name='Userlisttvseason',
            fields=[
                ('userlisttvseasonid', models.AutoField(db_column='UserListTVSeasonID', primary_key=True, serialize=False)),
                ('addedat', models.DateTimeField(auto_now_add=True, db_column='AddedAt')),
                ('tvseason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='div_content.tvseason')),
                ('userlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='div_content.userlist')),
            ],
            options={
                'db_table': 'UserListTVSeason',
            },
        ),
        migrations.CreateModel(
            name='Userlisttvshow',
            fields=[
                ('userlisttvshowid', models.AutoField(db_column='UserListTVShowID', primary_key=True, serialize=False)),
                ('addedat', models.DateTimeField(auto_now_add=True, db_column='AddedAt')),
                ('tvshow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='div_content.tvshow')),
                ('userlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='div_content.userlist')),
            ],
            options={
                'db_table': 'UserListTVShow',
            },
        ),
        migrations.CreateModel(
            name='Tvcountries',
            fields=[
                ('tvcountryid', models.AutoField(db_column='TVCountryID', primary_key=True, serialize=False)),
                ('countryid', models.ForeignKey(db_column='CountryID', on_delete=django.db.models.deletion.CASCADE, to='div_content.metacountry')),
                ('tvshowid', models.ForeignKey(db_column='TVShowID', on_delete=django.db.models.deletion.CASCADE, to='div_content.tvshow')),
            ],
            options={
                'db_table': 'TVCountries',
                'unique_together': {('tvshowid', 'countryid')},
            },
        ),
        migrations.CreateModel(
            name='Tvkeywords',
            fields=[
                ('tvkeywordid', models.AutoField(db_column='TVKeywordID', primary_key=True, serialize=False)),
                ('keywordid', models.ForeignKey(db_column='KeywordID', on_delete=django.db.models.deletion.CASCADE, to='div_content.metakeywords')),
                ('tvshowid', models.ForeignKey(db_column='TVShowID', on_delete=django.db.models.deletion.CASCADE, to='div_content.tvshow')),
            ],
            options={
                'db_table': 'TVKeywords',
                'unique_together': {('tvshowid', 'keywordid')},
            },
        ),
        migrations.CreateModel(
            name='Tvproductions',
            fields=[
                ('tvproductionid', models.AutoField(db_column='TVProductionID', primary_key=True, serialize=False)),
                ('metaproductionid', models.ForeignKey(db_column='MetaProductionID', on_delete=django.db.models.deletion.CASCADE, to='div_content.metaproduction')),
                ('tvshowid', models.ForeignKey(db_column='TVShowID', on_delete=django.db.models.deletion.CASCADE, to='div_content.tvshow')),
            ],
            options={
                'db_table': 'TVProductions',
                'unique_together': {('metaproductionid', 'tvshowid')},
            },
        ),
    ]
